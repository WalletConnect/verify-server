name: deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: choice
        options:
          - dev
          - staging
  workflow_call: null

concurrency:
  group: cd
  cancel-in-progress: false

jobs:
  build-container:
    runs-on:
      group: ubuntu-runners
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      # Authenticate with ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ steps.login-ecr.outputs.registry }}/bouncer
          flavor: |
            latest=auto
          tags: |
            type=raw,value=${{ github.ref_name }}.${{ github.sha }}

      # Setup Buildkit
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build, tag, and push image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  deploy:
    runs-on: ubuntu-latest
    needs:
      - build-container
    environment:
      name: ${{ inputs.environment }}
      url: https://${{ inputs.environment }}.verify.walletconnect.com/health
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - id: terraform
        uses: WalletConnect/actions/actions/deploy-terraform/@master
        env:
          TF_VAR_image_version: ${{ github.ref_name }}.${{ github.sha }}
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
          environment: ${{inputs.environment}}
          app-name: ${{ github.event.repository.name }}
